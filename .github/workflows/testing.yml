# This file is part of the Minnesota Population Center's NHGISXWALK.
# For copyright and licensing information, see the NOTICE and LICENSE files
# in this project's top-level directory, and also on-line at:
#   https://github.com/ipums/nhgisxwalk

 name: Continuous Integration
 
 on:
   push:
     branches:
     - '*'
   pull_request:
     branches:
     - '*'
   schedule:
     - cron: '59 23 * * *'
   workflow_dispatch:
     inputs:
       version:
         description: Manual CI Reason
         default: test
         required: false
 
 jobs:
   linting:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v4
        - uses: pre-commit/action@v3.0.0
 
   testing:
     needs: linting
     name: micromamba (${{ matrix.os }}, ${{ matrix.environment-file }})
     runs-on: ${{ matrix.os }}
     env:
       RUN_TESTS: pytest nhgisxwalk -v -r a --cov nhgisxwalk --doctest-modules --cov-config .coveragerc --cov-report xml --color yes --cov-append --cov-report term-missing
     timeout-minutes: 10
     strategy:
       matrix:
         environment-file: [ci/38.yaml, ci/39.yaml, ci/310.yaml, ci/311.yaml]
         os: ['ubuntu-latest']
         include:
           - environment-file: ci/311.yaml
             os: macos-latest
           - environment-file: ci/311.yaml
             os: windows-latest
     
     steps:
       - name: checkout repo
         uses: actions/checkout@v4

       - name: setup micromamba
         uses: mamba-org/provision-with-micromamba@main
         with:
           environment-file: ${{ matrix.environment-file }}
           micromamba-version: 'latest'
       
       - name: environment info
         shell: bash -l {0}
         run: |
           micromamba info
           micromamba list
       
       - name: spatial versions
         shell: bash -l {0}
         run: |
           python -c "import geopandas; geopandas.show_versions();"
 
       - name: run tests - bash
         shell: bash -l {0}
         run: ${{ env.RUN_TESTS }}
         if: matrix.os != 'windows-latest'
       
       - name: run tests - powershell
         shell: powershell
         run: ${{ env.RUN_TESTS }}
         if: matrix.os == 'windows-latest'
     
       - name: codecov
         uses: codecov/codecov-action@v3
         with:
           token: ${{ secrets.CODECOV_TOKEN }}
           file: ./coverage.xml
           name: nhgisxwalk-codecov
